# Global namespace used for all charts
namespace: helm-app

alb:
    fullnameOverride: alb-nginx
    replicaCount: 1
    backendHostTpl: frontend.helm-app
    image:
      repository: nginx
      tag: latest
    configMapName: alb-nginx-html
    tlsSecretName: alb-nginx-tls
    service:
      type: NodePort
      http:
        enabled: false
        port: 80
        targetPort: 80
        nodePort: 30100
      https:
        port: 443
        targetPort: 443
        nodePort: 31443

frontend:
  fullnameOverride: frontend
  replicaCount: 1
  image:
    repository: nginx
    tag: latest
    imagePullPolicy: Always
  containerPort: 80
  configMapName: frontend-html-config
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

apiGateway:
  fullnameOverride: api-gateway
  replicaCount: 1
  image:
    repository: api-gateway
    tag: latest
    pullPolicy: Never
  containerPort: 8081
  service:
    type: NodePort
    port: 8081
    targetPort: 8081
    nodePort: 30081
  resources:
    requests:
      cpu: "40m"
    limits:
      cpu: "200m"

lambdaProducer:
  fullnameOverride: lambda-producer
  replicaCount: 1
  image:
    repository: lambda-producer
    tag: latest
    pullPolicy: Never
  containerPort: 4000
  service:
    type: ClusterIP
    port: 4000
    targetPort: 4000

rabbitmq:
  image:
    repository: rabbitmq
    tag: "3-management"
  replicaCount: 1

  credentials:
    username: myuser
    password: mypass

  ports:
    amqp: 5672
    management: 15672

  pvc:
    name: rabbitmq-pvc
    accessMode: ReadWriteOnce
    storage: 1Gi

  secretName: rabbitmq-secret   

lambdaConsumer:
  fullnameOverride: lambda-consumer
  replicaCount: 1
  image:
    repository: lambda-consumer
    tag: latest
    pullPolicy: Never
  containerPort: 4001
  service:
    type: ClusterIP
    port: 4001
    targetPort: 4001
  rabbitmqUrl: amqp://myuser:mypass@rabbitmq.helm-app.svc.cluster.local:5672

backendService:
  fullnameOverride: backend
  replicaCount: 1

  image:
    repository: backend
    tag: latest
    pullPolicy: Never

  containerPort: 3000

  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000

  databaseUrl: postgres://user:password@postgres.helm-app.svc.cluster.local:5432/mydb

  redis:
    host: redis
    port: 6379

redis:
  fullnameOverride: redis
  replicaCount: 1
  image:
    repository: redis
    tag: latest
    pullPolicy: IfNotPresent
  containerPort: 6379
  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379

postgres:
  fullnameOverride: postgres
  replicaCount: 1

  image:
    repository: postgres
    tag: 15-alpine
    pullPolicy: IfNotPresent

  containerPort: 5432

  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432

  auth:
    user: myuser
    password: mypass
    database: mydb

  initdbScripts:
    init.sql: |
      CREATE TABLE IF NOT EXISTS test_table (
        id SERIAL PRIMARY KEY,
        message TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );

